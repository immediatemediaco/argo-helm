{{- $redisHa := index .Values "redis-ha" -}}
{{- if and .Values.redis.enabled (not $redisHa.enabled) -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "argo-cd.redis.fullname" . }}-health-configmap
  namespace: {{ include  "argo-cd.namespace" . }}
  labels:
    {{- include "argo-cd.labels" (dict "context" . "component" .Values.redis.name "name" .Values.redis.name) | nindent 4 }}
data:
  redis_liveness.sh: |
    response=$(
      redis-cli \
        -a "${REDIS_PASSWORD}" --no-auth-warning \
        -h localhost \
        -p {{ .Values.redis.containerPorts.redis }} \
        ping
    )
    if [ "$response" != "PONG" ] && [ "${response:0:7}" != "LOADING" ] ; then
      echo "$response"
      exit 1
    fi
    echo "response=$response"
  redis_readiness.sh: |
    response=$(
      redis-cli \
        -a "${REDIS_PASSWORD}" --no-auth-warning \
        -h localhost \
        -p {{ .Values.redis.containerPorts.redis }} \
        ping
    )
    if [ "$response" != "PONG" ] ; then
      echo "$response"
      exit 1
    fi
    echo "response=$response"
  redis_entrypoint.sh: |
    #!/bin/sh

    echo "[INFO] Starting Redis with custom entrypoint..."

    if [ -n "$REDIS_PASSWORD" ]; then
      PASSWORD="$REDIS_PASSWORD"
    elif [ -n "$REDIS_PASSWORD_FILE" ] && [ -f "$REDIS_PASSWORD_FILE" ]; then
      PASSWORD=$(cat "$REDIS_PASSWORD_FILE")
    elif [ -f /mnt/secrets/redis-password/_k8s_argocd_redis_password ]; then
      PASSWORD=$(cat /mnt/secrets/redis-password/_k8s_argocd_redis_password)
    else
      echo "[ERROR] Redis password not found!"
      exit 1
    fi

    echo "[INFO] Launching redis-server with requirepass"
    exec redis-server \
      --save "" \
      --appendonly no \
      --requirepass "$PASSWORD"

{{- end }}
